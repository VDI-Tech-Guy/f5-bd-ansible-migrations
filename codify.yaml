---

- name: Copy Inventory File For Tenant Creation
  hosts: bastion-backup
  tasks:

    - name: use find to get the files list which you want to copy/fetch
      ansible.builtin.find: 
        paths: /tmp/
        patterns: "*.ucs"
      register: UCS_fetch

    - name: use fetch to get the files #NEED TO FIX FOR SPECIFIC UCS FILE 
      ansible.builtin.fetch:
        src: "{{ item.path }}"
        dest: /tmp/
        flat: yes
      with_items: "{{ UCS_fetch.files }}"

    - name: Create a Temp Directory
      ansible.builtin.file:
        path: /tmp/ucs_fix
        state: directory
        mode: '0755'

    - name: Unzip UCS File 
      ansible.builtin.command: 
        cmd: "tar xfvz {{ item.path }} -C /tmp/ucs_fix"
      with_items: "{{ UCS_fetch.files }}"

    - name: Remove Interface blocks
      ansible.builtin.shell: |
        sed '/^net interface/,/^}/d' /tmp/ucs_fix/config/bigip_base.conf > /tmp/test.conf
      args:
        executable: /bin/bash

    - name: Change VLAN 102 to proper naming
      ansible.builtin.shell: |
        sed -i 's|/Common/VL102|/Common/vl102|' /tmp/test.conf
      args:
        executable: /bin/bash

    - name: Simplify net vlan blocks to only include tag
      shell: |
        awk '
        /^net vlan / {
          in_vlan = 1
          vlan_header = $0
          tag_line = ""
          next
        }
        in_vlan {
          if ($1 == "tag") {
            tag_line = "    " $0
          }
          if ($0 ~ /^}/) {
            if (tag_line != "") {
              print vlan_header
              print tag_line
              print "}"
            }
            in_vlan = 0
          }
          next
        }
        {
          print
        }' /tmp/test.conf > /tmp/config.tmp 
      args:
        executable: /bin/bash

    - name: Replace net stp /Common/cist block with new stp and trunk config
      shell: |
        awk '
        BEGIN { skip = 0 }
        /^net stp \/Common\/cist {/ {
          skip = 1
          next
        }
        skip {
          if ($0 ~ /^}/) {
            skip = 0
          }
          next
        }
        {
          print
        }
        END {
          print "net stp /Common/cist { }"
          print "net trunk F5OS_INTERNAL {"
          print "    distribution-hash src-dst-mac"
          print "    interfaces {"
          print "        1.1.vqf-cc.1"
          print "        2.1.vqf-cc.2"
          print "    }"
          print "    lacp-mode passive"
          print "    stp disabled"
          print "    type ha-only"
          print "}"
        }
        ' /tmp/config.tmp > /tmp/config2.tmp
      args:
        executable: /bin/bash

# && mv /tmp/config.tmp /path/to/config.txt

    # - name: Remove Interface Junk
    #   ansible.builtin.shell: |
    #     sed -n '/^net vlan/{h; n; :a; /tag [0-9]\+/{H; x; s/\n.*tag/\ntag/;p; b}; n; ba}' /tmp/test.conf
    #   args:
    #     executable: /bin/bash
        # sed -n '/^net vlan/,/^}/{^net vlan/ {h; n; next}^ *tag / {H; x; s/\n.*tag/tag/; p}}' /tmp/test.conf  
        # sed -n '/^net vlan/{h; n; :a; /tag [0-9]\+/{H; x; s/\n.*tag/\ntag/;p; b}; n; ba}' /tmp/test.conf
        # sed -n '/^net vlan/{h;:a;n;/tag [0-9]\+/{s/.*tag /    tag /;H};/}/!ba;x;s/\n.*tag/\n/;s/\n/ /;s/$/ }/;p}' /tmp/test.conf
        # sed -n '/^net vlan/{h; n; :a; /tag [0-9]\+/{H; x; s/\n.*tag/\ntag/;p; b}; n; ba}' /tmp/test.conf

    - name: output test.conf
      ansible.builtin.command: 
        cmd: "cat /tmp/config2.tmp"
  
    # - name: List Directory
    #   ansible.builtin.find:
    #     paths: /tmp/ucs_fix
    #     recurse: yes
    #     file_type: directory

    # - name: UnZIP UCS File for Config Modification
    #   ansible.builtin.unarchive:
    #     src: "{{ item.path }}"
    #     dest: /tmp/ucs_fix
    #     extra_opts:
    #     - --transform
    #     - s/^xxx/yyy/
    #   with_items: "{{ UCS_fetch.files }}"

      #   - name: Reduce net vlan blocks to only tag line (fixed braces)
      # ansible.builtin.shell: |
      #   awk '
      #     BEGIN { in_vlan = 0; vlan_name = ""; tag = "" }
      #     /^net vlan/ {
      #       in_vlan = 1
      #       vlan_name = $0
      #       tag = ""
      #       next
      #     }
      #     in_vlan && /tag [0-9]+/ {
      #       match($0, /tag ([0-9]+)/, m)
      #       tag = m[1]
      #     }
      #     in_vlan && /^\}/ {
      #       if (tag != "") {
      #         print vlan_name
      #         print "    tag " tag
      #         print "}"
      #       }
      #       in_vlan = 0
      #       next
      #     }
      #   ' /tmp/test.conf