---
- name: Backup UCS with Declaratives
  hosts: lb
  connection: httpapi
  gather_facts: false

  vars:
    ansible_httpapi_password: "{{ ansible_password }}"
    ansible_network_os: f5networks.f5_bigip.bigip
    ansible_httpapi_use_ssl: yes
    ansible_httpapi_validate_certs: no
    ansible_httpapi_port: "{{ server_port }}"

  tasks:

    - name: Create a new UCS
      f5networks.f5_bigip.bigip_ucs_fetch:
        dest: /tmp/cs_backup.ucs
      register: task

    - name: Debug task
      ansible.builtin.debug:
        var: task

    - name: Wait for Backup Task to complete
      ansible.builtin.uri:
        url: "https://{{ ansible_host }}/mgmt/tm/task/sys/ucs/{{ task.task_id }}"
        method: GET
        return_content: true
        status_code: 200
        force_basic_auth: true
        user: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        validate_certs: false
      register: atc_Backup_status
      until: atc_Backup_status is success
      retries: 30
      delay: 30
      delegate_to: localhost
      when: task.changed

    - name: Download a new UCS
      f5networks.f5_bigip.bigip_ucs_fetch:
        dest: /tmp/cs_backup.ucs
        src: "{{ task.src }}"
        task_id: "{{ task.task_id }}"
        timeout: 300

    - name: Download an existing UCS
      f5networks.f5_bigip.bigip_ucs_fetch:
        src: cs_backup.ucs
        dest: /tmp/cs_backup.ucs