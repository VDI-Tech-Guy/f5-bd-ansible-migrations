---
- name: GRAB F5 FACTS
  hosts: lb
  connection: local
  gather_facts: false

  tasks:
    - name: COLLECT BIG-IP FACTS
      f5networks.f5_modules.bigip_device_info:
        gather_subset:
          - system-info
        provider:
          server: "{{ ansible_host }}"
          user: "{{ ansible_user }}"
          password: "{{ ansible_password }}"
          server_port: "{{ server_port }}"
          no_f5_teem: yes
          validate_certs: false
      register: device_facts

    - name: Set BIG-IP Information in Variables
      ansible.builtin.set_fact:
        version: "{{ device_facts['system_info']['product_version'] }}"
        hardware: "{{ device_facts['system_info']['marketing_name'] }}"

    - name: Gather CPU Info
      ansible.builtin.set_fact:
        cpu_info_gather: "{{ item }}"
      with_items: "{{ device_facts['system_info']['hardware_information'] }}"
      when: 
      - item.type is defined
      - "'base-board' in item.type"
      - "'cpus' in item.name"

    - name: Debug Variables
      ansible.builtin.debug:
        msg:
        - "BIG-IP Version - {{ version }}"
        - "BIG-IP Hardware Model - {{ hardware }}"
        - "BIG-IP CPU Socket Count - {{ cpu_info_gather.versions[3].version }} {{ cpu_info_gather.versions[3].name }}" 
        - "BIG-IP CPU Info - {{ cpu_info_gather.model }}" 
        - "BIG-IP CPU Core Count - {{ cpu_info_gather.versions[1].version }} {{ cpu_info_gather.versions[1].name }}" 

    - name: Combine Data to JSON File
      ansible.builtin.set_fact:
        inventory_info: 
          bip_version: "{{ version }}"
          bip_platform_hw: "{{ hardware }}"
          bip_socket_info: "{{ cpu_info_gather.versions[3].version }} - {{ cpu_info_gather.versions[3].name }}" 
          bip_cpu_info: "{{ cpu_info_gather.model }}" 
          bip_cpu_cores: "{{ cpu_info_gather.versions[1].version }} - {{ cpu_info_gather.versions[1].name }}" 

    - name: "Copy Inventory for {{inventory_hostname}} to file" 
      ansible.builtin.copy:
        content: "{{ results | to_nice_json }}" 
        dest: "/tmp/inventory_{{inventory_hostname}}.json"

- name: Ansible Copy File
  hosts: bastion-backup
  tasks:
    - name: Copy from Local to Remote location
      copy:
       src: "{{ item }}"
       dest: "{{ item }}"
      with_fileglob: "/tmp/inventory_*.json"