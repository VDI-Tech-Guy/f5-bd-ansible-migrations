---

- name: Copy Inventory File For Tenant Creation
  hosts: bastion-backup
  tasks:

    - name: use find to get the files list which you want to copy/fetch
      ansible.builtin.find: 
        paths: /tmp/
        patterns: "master_key_*.json"
      register: file_2_fetch

    - name: use fetch to get the files
      ansible.builtin.fetch:
        src: "{{ item.path }}"
        dest: /tmp/
        flat: yes
      with_items: "{{ file_2_fetch.files }}"

- name: Get Crypto Info
  hosts: velos-lb
  connection: local
  gather_facts: false

  tasks:
    - name: Set Provider
      ansible.builtin.set_fact:
        provider:
          server: "{{ ansible_host }}"
          user: "{{ ansible_user }}"
          password: "{{ ansible_password }}"
          server_port: "{{ server_port }}"
          no_f5_teem: yes
          validate_certs: false

    - name: Set admin Password
      uri:
        url: "https://{{ ansible_host }}/mgmt/shared/authz/users/admin"
        method: PATCH
        body: '{"oldPassword":"admin","password":"{{ ansible_password }}"}'
        body_format: json
        validate_certs: false
        force_basic_auth: true
        user: admin
        password: admin
        headers:
          Content-Type: "application/json"
      register: result
      delegate_to: localhost
      ignore_errors: true

    - name: "Change the user {{ ansible_user }} shell"
      f5networks.f5_modules.bigip_user:
        username_credential: "{{ ansible_user }}"
        shell: bash
        state: present
        provider: "{{ provider }}"
      register: f5_shell
      until: f5_shell.changed
      retries: 10
      delay: 10
      delegate_to: localhost


    - name: Import Master Key From JSON File
      ansible.builtin.set_fact:
        master_key_output: "{{ lookup('file',item) | from_json }}"
      with_fileglob: "/tmp/master_key_*.json"
      delegate_to: localhost

    - name: debug master key master_key_output
      ansible.builtin.debug:
        var: master_key_output

    - name: debug master key master_key_output
      ansible.builtin.debug:
        var: master_key_output.stdout[0]

    - name: Get Master OLD Key
      f5networks.f5_modules.bigip_command:
        commands: >
          run /util bash -c "f5mku -K"
        provider: "{{ provider }}"
      register: f5_old_key
      until: f5_old_key.stdout[0] | trim | length > 0
      retries: 10
      delay: 10

    - name: debug master key old_key
      ansible.builtin.debug:
        var: old_key

    - name: Set Master Key
      f5networks.f5_modules.bigip_command:
        commands: >
          run /util bash -c "f5mku -r {{ master_key_output.stdout[0] }}"
        provider: "{{ provider }}"
      register: f5_re_key
      until: "'Rekeying' in f5_re_key.stdout[0]"
      retries: 10
      delay: 10

    - name: Set crypto key
      f5networks.f5_modules.bigip_command:
        commands: >
          run /util bash -c "
          expect -c 'spawn tmsh modify /sys crypto master-key prompt-for-password;
          sleep 1;
          send -- {{ ansible_password }}\r;
          sleep 1;
          send -- {{ ansible_password }}\r;
          sleep 1;'"
        provider: "{{ provider }}"
      register: f5_set_key
      until: "'spawn' in f5_set_key.stdout[0]"
      retries: 10
      delay: 10
  
    - name: SAVE RUNNING CONFIG ON BIG-IP
      f5networks.f5_modules.bigip_config:
        provider: "{{ provider }}"
        save: true
      register: f5_save
      until: f5_save.changed
      retries: 10
      delay: 10
          
    - name: What is the Current Key
      f5networks.f5_modules.bigip_command:
        commands: >
          run /util bash -c "f5mku -K"
        provider: "{{ provider }}"
      register: cur_key

    - name: debug master key cur_key
      ansible.builtin.debug:
        var: cur_key
