---

- name: Copy Inventory File For Tenant Creation
  hosts: bastion-backup
  tasks:

    - name: use find to get the files list which you want to copy/fetch
      ansible.builtin.find: 
        paths: /tmp/
        patterns: "inventory_*.json"
      register: file_2_fetch

    - name: use fetch to get the files
      ansible.builtin.fetch:
        src: "{{ item.path }}"
        dest: /tmp/
        flat: yes
      with_items: "{{ file_2_fetch.files }}"


- name: Create F5OS Tenant
  hosts: velos
  connection: httpapi
  gather_facts: false

  vars:
    ansible_httpapi_password: "{{ ansible_password }}"
    ansible_network_os: "f5networks.f5os.f5os"
    ansible_httpapi_use_ssl: true
    ansible_httpapi_use_proxy: false
    ansible_httpapi_validate_certs: false
    ansible_httpapi_port: "{{ server_port }}"
    ansible_command_timeout: 1800
    persistent_log_messages: tenant_info.true
    partition_name: DemoPartition
    cpu_cores: 2

  tasks:

    - name: math 
      debug: 
        msg: "{{ ( 3.5 * 1024 * cpu_cores ) + 512 | int }}"


    # - name: Import Information From JSON File
    #   ansible.builtin.set_fact:
    #     inventory: "{{ lookup('file',item) | from_json }}"
    #   with_fileglob: "/tmp/inventory_*.json"
    #   delegate_to: localhost

    # - name: debug output
    #   ansible.builtin.debug:
    #     var: inventory

    # - name: Collect interface and vlan information on F5OS device
    #   f5networks.f5os.f5os_device_info:
    #     gather_subset:
    #       - tenant-images
    #       - vlans 
    #   register: tenant_info

    # - name: debug output
    #   ansible.builtin.debug:
    #     var: tenant_info

    # - name: Create tenant 
    #   f5networks.f5os.f5os_tenant:
    #     name: automation-test
    #     image_name: "{{ tenant_info.tenant_images[0].name }}"
    #     nodes:
    #       - 1
    #     mgmt_ip: 192.170.7.198
    #     mgmt_prefix: 24
    #     mgmt_gateway: 192.170.7.1
    #     vlans: "{{ tenant_info.vlans[0].vlan_id }}"
    #     cpu_cores: "{{ cpu_cores }}"
    #     memory: "( 3.5 * 1024 * {{ cpu_cores }} ) + 512"
    #     cryptos: disabled
    #     virtual_disk_size: 120
    #     running_state: configured